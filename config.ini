[WALLET]
# Your Ronin wallet address
STAKE_ACCOUNT_ADDRESS = YOUR_RONIN_WALLET
# Private key of your Ronin wallet (do not share with anyone)
STAKE_PK = YOUR_RONIN_PRIVATE_KEY

[RENDER]
# Enable if using the code on Render's WebService (Create a free account at https://render.com/ and activate the WebService for free)
USE_RENDER_WEB_SERVICE = YES
# Render port to be used. Default is '8080'
RENDER_PORT = 8080

[MORALIS]
# API key for your Moralis account (get a free account at https://developers.moralis.io/)
MORALIS_API_KEY = YOUR_MORALIS_API_KEY

################################## ONLY CHANGE THE BELOW PARAMETERS IF YOU ARE AN ADVANCED USER ##################################

# Base URL for the Moralis API
MORALIS_BASE_URL = https://deep-index.moralis.io/api/v2
# Name of the blockchain used in Moralis
MORALIS_CHAIN = ronin

[RONIN]
# RPC URL of the Ronin (connection with the blockchain)
RONIN_RPC_URL = https://api.roninchain.com/rpc
# Ronin network identifier (used in transactions)
CHAIN_ID = 2020
# Maximum gas amount the transaction can consume
GAS_LIMIT = 371098
# Multiplier to calculate the gas price (10% increase to avoid transaction errors)
GAS_PRICE_MULTIPLIER = 1.1
# Staking contract address for AXS
CONTRACT_ADDRESS = 0x05b0bb3c1c320b280501b86706c3551995bc8571
# JSON file name containing the contract's ABI
ABI_FILE = axs_staking_abi.json

[DEFAULT]
# Log configuration
LOG_FILE = main_log.log
# 1 for mm/dd/yyyy, 2 for dd/mm/yyyy
LOG_DATE_FORMAT = 1
# Maximum log size in MB before generating a new one (The system will always keep 2 logs, new logs will replace the oldest ones)
LOG_MAX_SIZE_MB = 2

# Define the UTC offset for the "Last successful staking" (e.g., 0 for UTC, +3 for UTC+3, -3 for UTC-3)
UTC_FOR_LAST_STAKING = 0
# Interval in seconds to check if it's time to perform the re-stake
RECHECK_DELAY_SECONDS = 5
# Wait time in seconds before retrying in case of a re-stake failure
FAILED_RESTAKE_RETRY_SECONDS = 60
# Default interval in hours between successful re-stakes
SUCCESSFUL_RESTAKE_DELAY_HOURS = 24
# Extra time in seconds to avoid re-stakes before the minimum interval
SUCCESSFUL_RESTAKE_EXTRA_SECONDS = 1
# Timeout in seconds to check the status of a transaction
TRANSACTION_TIMEOUT_SECONDS = 300